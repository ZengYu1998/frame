## Spring 配置
spring:
  ################ Redis 基础配置 ##############
  redis:
    host: 127.0.0.1 #Redis 地址
    port: 6379      #Redis 端口 默认 6379
    password:       #Redis 密码 默认空
    database: 0     #Redis 数据库索引
    timeout: 2000   #Redis 链接超时时间
    ################ Redis 线程池设置 ##############
    lettuce:
      pool:
        max-active: -1 #Redis 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1   #Redis 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8    #Redis 连接池中的最大空闲连接
        min-idle: 0    #Redis 连接池中的最小空闲连接
  ################ Redis 基础配置完毕 ##############

  ################ 数据库 连接配置 ##############
  datasource:
    url: jdbc:mysql://47.106.218.109:3306/frame?useUnicode=true&characterEncoding=utf8 #连接地址
    username: zy     #连接用户名 一般为 root
    password: 123456 #连接密码
    driver-class-name: com.mysql.cj.jdbc.Driver #连接驱动
    type: com.alibaba.druid.pool.DruidDataSource #连接池数据源 (这里使用德鲁伊 提供可视化界面)
    druid:
      #数据源其他配置
      #初始化时建立物理连接的个数
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql 必须是一个查询语句
      #mysql中为 select 'x'
      #oracle中为 select 1 from dual
      validation-query: select 'x'
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  ################ 数据库 连接配置完毕 ##############

## 服务器 配置
server:
  port: 8099 #端口号
  servlet:
    context-path: /api #设置通过 http://ip:port/api/ 来访问项目